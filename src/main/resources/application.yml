server:
  port: '@server.port@'

management:
  security:
    flag: false
  server:
    port: '@management.port@'
  metrics:
    export:
      prometheus:
        enabled: false
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info,prometheus

spring:
  application:
    name: '@project.name@'
  output:
    ansi:
      enabled: always
  jpa:
    database: postgresql
    properties:
      hibernate:
        default_schema: vrt
    datasource:
      type: com.zaxxer.hikari.HikariDataSource
      driver-class-name: org.postgresql.Driver
      url: '@db.url@'
      username: '@db.user@'
      password: '@db.password@'
      hikari.maximum-pool-size: 10
    flyway:
      schemas: ps
      url: '@db.url@'
      table: flyway_schema_history
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      properties:
        session.timeout.ms: 60000
        max.poll.interval.ms: 60000

info:
  version: '@project.version@'
  stage: dev

kafka:
  max.poll.records: 100
  consumer:
    enabled: true
    prefix: vortigon
    concurrency: 7
    throttling-timeout-ms: 1000
  topic:
    party:
      initial: mg-events-party
  error-handler:
    backoff:
      initial-interval: 1000
      max-interval: 600000

repository:
  url: http://dominant:8022/v1/domain/repository_client
  network-timeout: 5000

service:
  dominant:
    url: http://dominant:8022/v1/domain/repository
    networkTimeout: 5000

scheduler:
  enabled: false
  lockFor: 30m
  pollingDelay: 3000
  querySize: 10
